<# language "JavaScript" #>
<# include "opengl-constants.js" #>

// settings...
var MODEL_NAME = "shuttle";
var AUTO_ROTATE = false;
var WINCX = 480;
var WINCY = 320;

// gls configuration...
gls.windowTitle = "obj demo";
if (AUTO_ROTATE) {
	gls.animation = true;
}
gls.windowWidth = WINCX;
gls.windowHeight = WINCY;
gls.viewPortWidth = WINCX;
gls.viewPortHeight = WINCY;

// global vars...
var xRot = 0.0, yRot = 0.0, scale = 1.0;
// mouse rotation...
var flagMouseDown = false, mouseStartX, mouseStartY, prevXRot, prevYRot;

console.clear ();
console.log ("-------------------- obj demo --------------------");

// load the "obj" extension
var obj = gls.require ("obj");

console.log (
	"lib name : " + obj.name + ", " +
	"version : " + (0x00FF & obj.version) + "." + ((0xFF00 & obj.version) >> 8) 
);

// load the MODEL
var model = obj.load ("..\\..\\models\\" + MODEL_NAME + ".obj");	

// calculate scale factor to display the model at proper visible size
// console.log ('height:' + model.boundingBox.height);

var scale = 0.8 / model.boundingBox.height;

function gls_init () {
	// init OpenGL settings...
	glClearColor (0.4, 0.4, 0.4, 1.0);
	glEnable (GL_DEPTH_TEST);
	glEnable (GL_LIGHTING);
	glEnable (GL_LIGHT0);
	glLightfv (GL_LIGHT0, GL_POSITION, gls.floatArray("0.1, 0.0, 0.0, 1.0") );
	glShadeModel (GL_FLAT);
	glPolygonMode (GL_FRONT, GL_FILL);
	glPolygonMode (GL_BACK, GL_FILL);
	glMaterialfv (GL_FRONT, GL_DIFFUSE, gls.floatArray("0.01, 0.01, 0.5"));
	glMaterialfv (GL_FRONT, GL_AMBIENT, gls.floatArray("0.0, 0.0, 0.5"));	
	glMaterialfv (GL_FRONT, GL_SPECULAR, gls.floatArray("0.0, 0.0, 0.0"));
}

function gls_renderScene () {
	glMatrixMode (GL_MODELVIEW);
	glLoadIdentity ();	
	
	glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	
	glScalef (scale, scale, scale);
	glRotatef (xRot, 1.0, 0.0, 0.0);
	glRotatef (yRot, 0.0, 1.0, 0.0);	
	
	model.render ();
	
	if (AUTO_ROTATE) {
		xRot = (xRot + 3) % 360;
		yRot = (yRot + 3) % 360;
	}
	
	gl.flush ();
}

function gls_mouseDown (button, x, y) {
	if (!AUTO_ROTATE) {
		flagMouseDown = true;

		mouseStartX = x;
		mouseStartY = y;
	
		prevXRot = xRot;
		prevYRot = yRot;
	}
}

function gls_mouseMove (button, x, y) {
	if (!AUTO_ROTATE && flagMouseDown) {
		var
		deltaX = x - mouseStartX,
		deltaY = y - mouseStartY;
		
		xRot = prevXRot + ((deltaY / WINCY) * 360.0);
		yRot = prevYRot + ((deltaX / WINCX) * 360.0);
		
		gls_renderScene ();
	}
}

function gls_mouseUp (button, x, y) {
	flagMouseDown = false;
}
