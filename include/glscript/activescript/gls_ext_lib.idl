//
// gls_ext_lib.idl  glScript ActiveScript interfaces for library extensions.
// 
// This file is part of glScript project.
//
//   glScript is free software: you can redistribute it and/or modify
//   it under the terms of the GNU Lesser General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   glScript is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU Lesser General Public License for more details.
//
//   You should have received a copy of the GNU Lesser General Public License
//   along with glScript. If not, see <http://www.gnu.org/licenses/>.
//
//   Copyright (c) 2012 Bal Bahadur Chettri
//
//   Author: Bal Bahadur Chettri (balu.chettri@gmail.com)
// 
//   Version: 0.1
//
import "oaidl.idl";
import "ocidl.idl";

/* interfaces */

/**
 * _GLScriptExtLib interface. All gls library extensions must provide an implementation
 * of this interface, which the glScript engine exposes to scripts. glScript engine
 * first of all calls gls_extension_get_interface () function on your extension to obtain the
 * Extension interface. The engine then calls GetLibInterface () method on the Extension
 * interface, which should return this inteface. Your extension should reuse a single interface
 * per thread and return unique interface for separate thread.
 *
 * Note that _GLScriptExtLib extends the IDispatch interface, which means the methods on the
 * interface will be called via Automation.
 */
[object, uuid(9D67C09A-FFF4-47ee-B1B8-D00C372489EA), dual, oleautomation]
interface _GLScriptExtLib : IDispatch {
    
    /** 
     * name property. Returns the lib name of the libary.
     *
     * @return lib name of the library extension.
     */
    [propget,helpstring("Returns the libname of the library.")] 
    HRESULT name ([out, retval] BSTR *pValue);

    /** 
     * Version property. Short version number of the library.
     *
     * @return version number of the library.
     *
     * @remarks On successful return, the high order byte contains the minor and the low order
     * byte contains the major version numbers.
     */
    [propget,helpstring("Returns the version number of the library.")]
    HRESULT version ([out, retval] short *pValue);

}/* interface _GLScriptExtLib */
